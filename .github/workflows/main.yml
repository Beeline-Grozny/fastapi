# This is a basic workflow to help you get started with Actions


name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: getting wgconf
      uses: actions/checkout@v3
    - name: search rep
      run: ls
    - name: wireguard connect
      run: |
        sudo apt install wireguard resolvconf
        echo "[Interface]" | sudo tee -a /etc/wireguard/wg0-client.conf
        echo "PrivateKey = OBrw5Og22o6cBYrPbAbnreyHDP6e1YSRWeP6uTiyXm0=" | sudo tee -a /etc/wireguard/wg0-client.conf
        echo "Address = 10.66.66.67/32,fd42:42:42::67/128" | sudo tee -a /etc/wireguard/wg0-client.conf
        echo "DNS = 94.140.14.14,94.140.15.15" | sudo tee -a /etc/wireguard/wg0-client.conf

        echo "[Peer]" | sudo tee -a /etc/wireguard/wg0-client.conf
        echo "PublicKey = cKCItjTu1GL6YirZDsMIbK9pINSwylXPmB6FlnBIGnU=" | sudo tee -a /etc/wireguard/wg0-client.conf
        echo "PresharedKey = vW2+IOfNdxOfPEz/FQHGzzNGn9RrJOp8kzwtuxyNkIg=" | sudo tee -a /etc/wireguard/wg0-client.conf
        echo "Endpoint = 212.192.134.141:41194" | sudo tee -a /etc/wireguard/wg0-client.conf
        echo "AllowedIPs = 192.168.0.0/24,10.66.66.0/24" | sudo tee -a /etc/wireguard/wg0-client.conf
        sudo wg-quick up wg0-client

      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: ssh connect
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          cd app
          git pull origin main
          docker-compose down -v
          docker-compose up -d --build
